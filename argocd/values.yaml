global:
  domain: cd.<path:secret/data/infra#domain>

configs:
  params:
    server.insecure: true
  clusterCredentials:
    krieg:
      server: https://kubernetes.default.svc
      config:
        tlsClientConfig:
          insecure: true
  credentialTemplates:
    home-kops-credentials:
      url: https://github.com/home-kops/
      password: <path:secret/data/devopstools/argocd#gh_org1_password>
      username: <path:secret/data/devopstools/argocd#gh_org1_username>
  secret:
    createSecret: true
    argocdServerAdminPassword: <path:secret/data/devopstools/argocd#admin_password>
    argocdServerAdminPasswordMtime: "2025-06-15T12:00:00Z"
  cmp:
    create: true
    plugins:
      argocd-vault-plugin-helm-oci:
        discover:
          find:
            command:
            - sh
            - "-c"
            - "find . -name 'Chart.yaml' && find . -name 'values.yaml'"
        init:
          command:
          - sh
          - -c
          - |
            helm repo add bitnami https://charts.bitnami.com/bitnami
        generate:
          command:
          - bash
          - "-c"
          - |
            helm template "$ARGOCD_APP_NAME" -n "$ARGOCD_APP_NAMESPACE" $ARGOCD_ENV_HELM_ARGS $ARGOCD_ENV_HELM_CHART | argocd-vault-plugin generate --secret-name devops-tools:argocd-vault-plugin-credentials -
      argocd-vault-plugin-helm:
        discover:
          find:
            command:
            - sh
            - "-c"
            - "find . -name 'Chart.yaml' && find . -name 'values.yaml'"
        init:
          command:
          - sh
          - -c
          - |
            helm repo add bitnami https://charts.bitnami.com/bitnami
            if [[ -n "${ARGOCD_ENV_HELM_RELEASE:-}" ]]; then
              helm repo add ${ARGOCD_ENV_HELM_RELEASE} ${ARGOCD_ENV_HELM_CHART}
            fi
            helm dependency build
        generate:
          command:
          - bash
          - "-c"
          - |
            helm template $ARGOCD_APP_NAME -n $ARGOCD_APP_NAMESPACE ${ARGOCD_ENV_HELM_ARGS} . | argocd-vault-plugin generate --secret-name devops-tools:argocd-vault-plugin-credentials -
      argocd-vault-plugin-kustomize:
        discover:
          find:
            command:
            - sh
            - "-c"
            - "find . -name kustomization.yaml"
        generate:
          command:
          - bash
          - "-c"
          - |
            kustomize build . --enable-helm | argocd-vault-plugin generate --secret-name devops-tools:argocd-vault-plugin-credentials -

redis:
  enabled: true

controller:
  replicas: 1

server:
  replicas: 1
  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
    tls: true

repoServer:
  replicas: 1
  rbac:
  - verbs:
    - get
    - list
    - watch
    apiGroups:
    - ''
    resources:
    - secrets
    - configmaps   
  envFrom:
  - secretRef:
      name: argocd-vault-plugin-credentials
  volumeMounts:
  - name: custom-tools
    mountPath: /usr/local/bin/argocd-vault-plugin
    subPath: argocd-vault-plugin
  volumes:
  - name: cmp-plugin
    configMap:
      name: argocd-cmp-cm
  - name: custom-tools
    emptyDir: {}
  initContainers:
  - name: download-tools
    image: alpine:3.22
    command: [sh, -c]
    env:
    - name: AVP_VERSION
      value: "1.18.1"
    args:
      - |
        set -ex
        wget -O /custom-tools/argocd-vault-plugin https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_linux_amd64
        chmod +x /custom-tools/argocd-vault-plugin
    volumeMounts:
    - mountPath: /custom-tools
      name: custom-tools
  extraContainers:
  - name: avp-helm
    command: [/var/run/argocd/argocd-cmp-server]
    image: quay.io/argoproj/argocd
    securityContext:
      runAsNonRoot: true
      runAsUser: 999
    volumeMounts:
    - mountPath: /var/run/argocd
      name: var-files
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /home/argocd/cmp-server/config/plugin.yaml
      subPath: argocd-vault-plugin-helm.yaml
      name: cmp-plugin
    - name: custom-tools
      subPath: argocd-vault-plugin
      mountPath: /usr/local/bin/argocd-vault-plugin
  - name: avp-kustomize
    command: [/var/run/argocd/argocd-cmp-server]
    image: quay.io/argoproj/argocd
    securityContext:
      runAsNonRoot: true
      runAsUser: 999
    volumeMounts:
    - mountPath: /var/run/argocd
      name: var-files
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /home/argocd/cmp-server/config/plugin.yaml
      subPath: argocd-vault-plugin-kustomize.yaml
      name: cmp-plugin
    - name: custom-tools
      subPath: argocd-vault-plugin
      mountPath: /usr/local/bin/argocd-vault-plugin
  automountServiceAccountToken: true

applicationSet:
  replicas: 1
